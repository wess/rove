name: Release

on:
  push:
    branches:
      - main
    paths:
      - 'VERSION'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: jarredsumner/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Compile all platforms
        run: bun run compile

      - name: Read version
        id: get_version
        run: |
          version=$(<VERSION)
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Package Linux x64
        run: |
          tar -czvf shift-${{ steps.get_version.outputs.version }}-linux-x64.tar.gz \
            -C build/linux-x64 shift

      - name: Package macOS x64
        run: |
          tar -czvf shift-${{ steps.get_version.outputs.version }}-darwin-x64.tar.gz \
            -C build/darwin-x64 shift

      - name: Package macOS ARM64
        run: |
          tar -czvf shift-${{ steps.get_version.outputs.version }}-darwin-arm64.tar.gz \
            -C build/darwin-arm64 shift

      - name: Package Windows x64
        run: |
          zip -j shift-${{ steps.get_version.outputs.version }}-windows-x64.zip \
            build/windows-x64/shift.exe

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: ${{ steps.get_version.outputs.version }}
          files: |
            shift-${{ steps.get_version.outputs.version }}-linux-x64.tar.gz
            shift-${{ steps.get_version.outputs.version }}-darwin-x64.tar.gz
            shift-${{ steps.get_version.outputs.version }}-darwin-arm64.tar.gz
            shift-${{ steps.get_version.outputs.version }}-windows-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}